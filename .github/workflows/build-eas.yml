name: Build MustiFX EAs (release assets)

on:
  workflow_dispatch:
  push:
    paths:
      - 'MQL5/**'
      - 'MQL4/**'
      - '.github/workflows/build-eas.yml'
      - 'MustiFX_all_sources.zip'
      - 'MustiFX_sources/**'

jobs:
  download-and-build:
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download release asset mt5_portable.zip (if exists)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $releaseTag = 'v1.1'
          $assetName = 'mt5_portable.zip'
          $api = "https://api.github.com/repos/${{ github.repository }}/releases/tags/$releaseTag"
          $rel = (curl -s -H "Authorization: token $env:GITHUB_TOKEN" $api) | ConvertFrom-Json
          if ($rel -eq $null) { Write-Host "Release $releaseTag not found"; exit 0 }
          $asset = $rel.assets | Where-Object { $_.name -eq $assetName }
          if ($asset -ne $null) {
            $url = $asset.url
            Write-Host "Found $assetName => downloading..."
            # need to pass header and auth to get asset
            curl -L -H "Accept: application/octet-stream" -H "Authorization: token $env:GITHUB_TOKEN" $url -o $assetName
            Expand-Archive -Path $assetName -DestinationPath mt5_portable
          } else { Write-Host "$assetName not present on release $releaseTag. Skipping MT5 step." }

      - name: Download release asset mt4_portable.zip (if exists)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $releaseTag = 'v1.1'
          $assetName = 'mt4_portable.zip'
          $api = "https://api.github.com/repos/${{ github.repository }}/releases/tags/$releaseTag"
          $rel = (curl -s -H "Authorization: token $env:GITHUB_TOKEN" $api) | ConvertFrom-Json
          if ($rel -eq $null) { Write-Host "Release $releaseTag not found"; exit 0 }
          $asset = $rel.assets | Where-Object { $_.name -eq $assetName }
          if ($asset -ne $null) {
            $url = $asset.url
            Write-Host "Found $assetName => downloading..."
            curl -L -H "Accept: application/octet-stream" -H "Authorization: token $env:GITHUB_TOKEN" $url -o $assetName
            Expand-Archive -Path $assetName -DestinationPath mt4_portable
          } else { Write-Host "$assetName not present on release $releaseTag. Skipping MT4 step." }

      - name: Find MetaEditor (MT5) and compile .mq5
        if: always()
        run: |
          if (Test-Path mt5_portable) {
            $me = Get-ChildItem -Path mt5_portable -Filter MetaEditor.exe -Recurse | Select-Object -First 1
            if ($me -ne $null) {
              Write-Host "MetaEditor found: $($me.FullName)"
              Get-ChildItem -Path MQL5 -Recurse -Filter *.mq5 | ForEach-Object {
                & "$($me.FullName)" /compile:$_.FullName /log
              }
            } else { Write-Host "MetaEditor.exe not found in mt5_portable. Skipping MT5 compilation." }
          } else { Write-Host "mt5_portable folder missing. skipped mt5 compile." }

      - name: Collect compiled ex5
        if: always()
        run: |
          mkdir build || true
          Get-ChildItem -Path . -Recurse -Filter *.ex5 | Copy-Item -Destination build -Force -ErrorAction SilentlyContinue

      - name: Find MetaEditor (MT4) and compile .mq4
        if: always()
        run: |
          if (Test-Path mt4_portable) {
            $me = Get-ChildItem -Path mt4_portable -Filter metaeditor.exe -Recurse | Select-Object -First 1
            if ($me -ne $null) {
              Write-Host "MetaEditor (MT4) found: $($me.FullName)"
              Get-ChildItem -Path MQL4 -Recurse -Filter *.mq4 | ForEach-Object {
                & "$($me.FullName)" /compile:$_.FullName /log
              }
            } else { Write-Host "metaeditor.exe not found in mt4_portable. Skipping MT4 compilation." }
          } else { Write-Host "mt4_portable folder missing. skipped mt4 compile." }

      - name: Collect compiled ex4
        if: always()
        run: |
          mkdir build_mt4 || true
          Get-ChildItem -Path . -Recurse -Filter *.ex4 | Copy-Item -Destination build_mt4 -Force -ErrorAction SilentlyContinue

      - name: Upload compiled artifacts
        uses: actions/upload-artifact@v4
        with:
          name: compiled-eas
          path: |
            build/**
            build_mt4/**
